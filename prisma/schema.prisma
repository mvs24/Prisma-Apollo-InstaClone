generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User { 
  id Int @default(autoincrement()) @id
  name String
  lastname String 
  email String @unique
  password String 
  photo String?
  passwordResetToken String?
  passwordChangedAt DateTime?
  passwordResetExpires DateTime?
  role Role @default(USER)
  posts Post[]
  comments Comment[]
  replies Reply[]
  postLikes PostLike[]
  commentLikes CommentLike[]
  following String[]
  followingRequests String[]
}

// Following (PENDING, ACCEPTED, IGNORED...)

model Post {
  id Int @default(autoincrement()) @id
  user User @relation(fields: [userId], references: [id])
  userId Int
  likes PostLike[]
  comments Comment[]
  content String
}

model PostLike { 
  id Int @default(autoincrement()) @id
  user User @relation(fields: [userId], references: [id])
  userId Int
  post Post @relation(fields: [postId], references: [id]) 
  postId Int
}

model Comment {
  id Int @default(autoincrement()) @id
  user User @relation(fields: [userId], references: [id])
  userId Int
  post Post @relation(fields: [postId], references: [id])
  postId Int
  replies Reply[]
  content String
}

model CommentLike {
  id Int @default(autoincrement()) @id
  user User @relation(fields: [userId], references: [id])
  userId Int
  comment Comment @relation(fields: [commentId], references: [id])
  commentId Int
}

model Reply {
  id Int @default(autoincrement()) @id
  user User @relation(fields: [userId], references: [id])
  userId Int
  content String
  comment Comment @relation(fields: [commentId], references: [id])
  commentId Int 
}

enum Role {
  ADMIN
  USER
}